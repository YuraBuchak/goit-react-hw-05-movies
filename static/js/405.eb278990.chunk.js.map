{"version":3,"file":"static/js/405.eb278990.chunk.js","mappings":"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","sources":["Api/Api.js","components/Serch/SerchMovie.jsx","Pages/Movies.jsx","components/MovieList/MovieList.jsx"],"sourcesContent":["const defaultUrl = 'https://api.themoviedb.org/3/';\n// const ApiKey = 'd18bf6b2746fb0003930e48639ffb8b8';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJkMThiZjZiMjc0NmZiMDAwMzkzMGU0ODYzOWZmYjhiOCIsInN1YiI6IjY0Nzg4ODA5OTM4MjhlMDBhNzYzMzI2YSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.lKAxGANSJLLtol2MDLLv8krLLwoOSubkdCp9pQTm9io',\n  },\n};\n\nexport const fetchTrending = async () => {\n  try {\n    const data = await fetch(\n      `${defaultUrl}trending/movie/day?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchSearchMovies = async text => {\n  try {\n    const data = await fetch(\n      `${defaultUrl}search/movie?query=${text}&include_adult=false&language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchMovieDetailsById = async id => {\n  try {\n    const data = await fetch(\n      `${defaultUrl}/movie/${id}?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchCredits = async id => {\n  try {\n    const data = await fetch(\n      `${defaultUrl}movie/${id}/credits?language=en-US`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const fetchReviews = async id => {\n  try {\n    const data = await fetch(\n      `${defaultUrl}movie/${id}/reviews?language=en-US&page=1`,\n      options\n    );\n\n    return await data.json();\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import PropTypes from 'prop-types';\nimport css from 'Style.module.css';\n\nconst SerchMovie = ({ onSubmit }) => {\n  const handleSubmit = event => {\n    event.preventDefault();\n    const query = event.target.elements.input.value;\n    if (query === '') {\n      window.alert('Write smth!');\n      return;\n    }\n    onSubmit(query);\n  };\n\n  return (\n    <form className={css.from} onSubmit={handleSubmit}>\n      <label className={css.fromLabel}>\n        <input className={css.fromInput} type=\"text\" name=\"input\" />\n      </label>\n\n      <button className={css.btnSubmit} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default SerchMovie;\n\nSerchMovie.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { fetchSearchMovies } from 'Api/Api';\nimport MovieList from 'components/MovieList/MovieList';\nimport SerchMovie from 'components/Serch/SerchMovie';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport css from 'Style.module.css';\n\nconst Movies = () => {\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = query => {\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!query) return;\n\n    async function fetch() {\n      try {\n        const { results } = await fetchSearchMovies(query);\n\n        const filteredMovie = results.map(({ title, id }) => {\n          return { title, id };\n        });\n        setMovie(filteredMovie);\n      } catch (error) {\n        console.warn(error);\n      }\n    }\n    fetch();\n  }, [query]);\n\n  return (\n    <div className={css.container}>\n      <SerchMovie onSubmit={handleSubmit} />\n      <MovieList movie={movie} locationBack={location} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import { Link } from 'react-router-dom';\nimport css from 'Style.module.css';\n\nconst MovieList = ({ movie, locationBack }) => {\n  return (\n    <ul className={css.trendList}>\n      {movie?.map(({ id, title }) => (\n        <li key={id} className={css.trendItem}>\n          <Link\n            className={css.trendSpan}\n            to={`/movies/${id}`}\n            state={{ from: locationBack }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieList;\n\n// MovieList.propTypes = {\n//   movie: PropTypes.arrayOf(\n//     PropTypes.shape({\n//       id: PropTypes.number.isRequired,\n//       title: PropTypes.string.isRequired,\n//     })\n//   ),\n// };\n"],"names":["defaultUrl","options","method","headers","accept","Authorization","fetchTrending","fetch","data","json","console","log","fetchSearchMovies","text","fetchMovieDetailsById","id","fetchCredits","fetchReviews","onSubmit","className","css","event","preventDefault","query","target","elements","input","value","window","alert","type","name","useState","movie","setMovie","useSearchParams","searchParams","setSearchParams","location","useLocation","get","useEffect","results","filteredMovie","map","title","warn","MovieList","locationBack","Link","to","state","from"],"sourceRoot":""}